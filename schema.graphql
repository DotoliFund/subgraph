type Factory @entity {
  # factory address
  id: Bytes!
  # amount of funds created
  fundCount: BigInt!
  # amount of investor
  investorCount: BigInt!
  # swap router contract address
  swapRouter: String!
  # manager fee
  managerFee: BigInt!
  # white list token min pool amount in eth
  minPoolAmount: BigInt!
  # total volume all time in derived ETH
  totalVolumeETH: BigDecimal!
  # total volume all time in derived USD
  totalVolumeUSD: BigDecimal!
  # current owner of the factory
  owner: Bytes!
}

type Fund @entity {
  # fund address
  id: Bytes!
  # fund address
  address: Bytes!
  # creation
  createdAtTimestamp: BigInt!
  # manager address
  manager: Bytes!
  # investorCount
  investorCount: BigInt!
  # volumeETH
  volumeETH: BigDecimal!
  # volumeUSD
  volumeUSD: BigDecimal!
  # tokens address
  tokens: [Bytes!]!
  # tokens symbol
  symbols: [String!]!
  # tokens decimals
  decimals: [BigInt!]!
  # tokens amount
  tokensAmount: [BigDecimal!]!
  # tokens volumeETH
  tokensVolumeETH: [BigDecimal!]!
  # tokens volumeUSD
  tokensVolumeUSD: [BigDecimal!]!
  # fee tokens address
  feeTokens: [Bytes!]!
  # fee tokens symbol
  feeSymbols: [String!]!
  # fee tokens amount
  feeTokensAmount: [BigDecimal!]!
}

type Investor @entity {
  # format: <fund address>-<investor address>
  id: ID!
  # creation
  createdAtTimestamp: BigInt!
  # fund address
  fund: Bytes!
  # manager address
  manager: Bytes!
  # investor address
  investor: Bytes!
  # principal ETH
  principalETH: BigDecimal!
  # principal USD
  principalUSD: BigDecimal!
  # volumeETH
  volumeETH: BigDecimal!
  # volumeUSD
  volumeUSD: BigDecimal!
  # tokens address not liquidity
  tokens: [Bytes!]!
  # tokens symbol not liquidity
  symbols: [String!]!
  # tokens decimals not liquidity
  decimals: [BigInt!]!
  # tokens amount not liquidity
  tokensAmount: [BigDecimal!]!
  # tokens volumeETH not liquidity
  tokensVolumeETH: [BigDecimal!]!
  # tokens volumeUSD not liquidity
  tokensVolumeUSD: [BigDecimal!]!
  # liquidity VolumeETH
  liquidityVolumeETH: BigDecimal!
  # liquidity VolumeUSD
  liquidityVolumeUSD: BigDecimal!
  # liquidity tokens address
  liquidityTokens: [Bytes!]!
  # liquidity tokens symbol
  liquiditySymbols: [String!]!
  # liquidity tokens decimal
  liquidityDecimals: [BigInt!]!
  # liquidity tokens amount
  liquidityTokensAmount: [BigDecimal!]!
  # profit ETH
  profitETH: BigDecimal!
  # profit USD
  profitUSD: BigDecimal!
  # profit ratio
  profitRatio: BigDecimal!
}

type Token @entity {
  # fund address
  id: Bytes!
  # fund address
  address: Bytes!
  # token symbol
  symbol: String!
  # creation
  updatedTimestamp: BigInt!
  # true : added, false : removed
  active: Boolean!
}

type Transaction @entity {
  # txn hash
  id: ID!
  # block txn was included in
  blockNumber: BigInt!
  # timestamp txn was confirmed
  timestamp: BigInt!
  # derived values
  subscribes: [Subscribe!]! @derivedFrom(field: "transaction")
  managerFeeOuts: [ManagerFeeOut!]! @derivedFrom(field: "transaction")
  deposits: [Deposit!]! @derivedFrom(field: "transaction")
  withdraws: [Withdraw!]! @derivedFrom(field: "transaction")
  swaps: [Swap!]! @derivedFrom(field: "transaction")
  mintNewPositions: [MintNewPosition!]! @derivedFrom(field: "transaction")
  increaseLiquidities: [IncreaseLiquidity!]! @derivedFrom(field: "transaction")
  collectPositionFees: [CollectPositionFee!]! @derivedFrom(field: "transaction")
  decreaseLiquidities: [DecreaseLiquidity!]! @derivedFrom(field: "transaction")
}

type Subscribe @entity {
  # <fund address>-<investor address>
  id: ID!
  # which txn the mint was included in
  transaction: Transaction!
  # time of txn
  timestamp: BigInt!
  # pointer to Fund 
  fund: Bytes!
  # investor address
  investor: Bytes!
  # txn origin
  origin: Bytes! # the EOA that initiated the txn
  # order within the txn
  logIndex: BigInt
}

type ManagerFeeOut @entity {
  # transaction hash
  id: ID!
  # which txn was included in
  transaction: Transaction!
  # time of txn
  timestamp: BigInt!
  # pointer to Fund 
  fund: Bytes!
  # pointer to Manager 
  manager: Bytes!
  # withdraw token address
  token: Bytes!
  # token symbol
  tokenSymbol: String!
  # amount of token withdraw
  amount: BigDecimal!
  # derived amount based on available prices of tokens
  amountETH: BigDecimal!
  # derived amount based on available prices of tokens
  amountUSD: BigDecimal!
  # txn origin
  origin: Bytes! # the EOA that initiated the txn
  # order within the txn
  logIndex: BigInt
}

type Deposit @entity {
  # transaction hash
  id: ID!
  # which txn was included in
  transaction: Transaction!
  # time of txn
  timestamp: BigInt!
  # pointer to Fund 
  fund: Bytes!
  # pointer to investor
  investor: Bytes!
  # withdraw token address
  token: Bytes!
  # token symbol
  tokenSymbol: String!
  # amount of token withdraw
  amount: BigDecimal!
  # derived amount based on available prices of tokens
  amountETH: BigDecimal!
  # derived amount based on available prices of tokens
  amountUSD: BigDecimal!
  # txn origin
  origin: Bytes! # the EOA that initiated the txn
  # order within the txn
  logIndex: BigInt
}

type Withdraw @entity {
  # transaction hash
  id: ID!
  # which txn was included in
  transaction: Transaction!
  # time of txn
  timestamp: BigInt!
  # pointer to fund 
  fund: Bytes!
  # pointer to investor
  investor: Bytes!
  # withdraw token address
  token: Bytes!
  # token symbol
  tokenSymbol: String!
  # amount of token withdraw
  amount: BigDecimal!
  # derived amount based on available prices of tokens
  amountETH: BigDecimal!
  # derived amount based on available prices of tokens
  amountUSD: BigDecimal!
  # txn origin
  origin: Bytes! # the EOA that initiated the txn
  # order within the txn
  logIndex: BigInt
}

type Swap @entity {
  # transaction hash
  id: ID!
  # which txn was included in
  transaction: Transaction!
  # timestamp of transaction
  timestamp: BigInt!
  # fund swap occured within
  fund: Bytes!
  # pointer to Manager 
  manager: Bytes!
  # pointer to investor
  investor: Bytes!
  # swap token0 address
  token0: String!
  # swap token1 address
  token1: String!
  # token0 symbol
  token0Symbol: String!
  # token1 symbol
  token1Symbol: String!
  # amount of token0 swapped
  amount0: BigDecimal!
  # amount of token1 swapped
  amount1: BigDecimal!
  # derived amount based on available prices of tokens
  amountETH: BigDecimal!
  # derived amount based on available prices of tokens
  amountUSD: BigDecimal!
  # txn origin
  origin: Bytes! # the EOA that initiated the txn
  # order within the txn
  logIndex: BigInt
}

type MintNewPosition @entity {
  # transaction hash
  id: ID!
  # which txn was included in
  transaction: Transaction!
  # timestamp of transaction
  timestamp: BigInt!
  # fund swap occured within
  fund: Bytes!
  # pointer to Manager 
  manager: Bytes!
  # pointer to investor
  investor: Bytes!
  # mint token0 address
  token0: String!
  # mint token1 address
  token1: String!
  # token0 symbol
  token0Symbol: String!
  # token1 symbol
  token1Symbol: String!
  # amount of token0 minted
  amount0: BigDecimal!
  # amount of token1 minted
  amount1: BigDecimal!
  # derived amount based on available prices of tokens
  amountETH: BigDecimal!
  # derived amount based on available prices of tokens
  amountUSD: BigDecimal!
  # txn origin
  origin: Bytes! # the EOA that initiated the txn
  # order within the txn
  logIndex: BigInt
}

type IncreaseLiquidity @entity {
  # transaction hash
  id: ID!
  # which txn was included in
  transaction: Transaction!
  # timestamp of transaction
  timestamp: BigInt!
  # fund swap occured within
  fund: Bytes!
  # pointer to Manager 
  manager: Bytes!
  # pointer to investor
  investor: Bytes!
  # increase liquidity token0 address
  token0: String!
  # increase liquidity token1 address
  token1: String!
  # token0 symbol
  token0Symbol: String!
  # token1 symbol
  token1Symbol: String!
  # amount of token0 increased
  amount0: BigDecimal!
  # amount of token1 increased
  amount1: BigDecimal!
  # derived amount based on available prices of tokens
  amountETH: BigDecimal!
  # derived amount based on available prices of tokens
  amountUSD: BigDecimal!
  # txn origin
  origin: Bytes! # the EOA that initiated the txn
  # order within the txn
  logIndex: BigInt
}

type CollectPositionFee @entity {
  # transaction hash
  id: ID!
  # which txn was included in
  transaction: Transaction!
  # timestamp of transaction
  timestamp: BigInt!
  # fund swap occured within
  fund: Bytes!
  # pointer to Manager 
  manager: Bytes!
  # pointer to investor
  investor: Bytes!
  # collect fee token0 address
  token0: String!
  # collect fee token1 address
  token1: String!
  # token0 symbol
  token0Symbol: String!
  # token1 symbol
  token1Symbol: String!
  # amount of token0 collected
  amount0: BigDecimal!
  # amount of token1 collected
  amount1: BigDecimal!
  # derived amount based on available prices of tokens
  amountETH: BigDecimal!
  # derived amount based on available prices of tokens
  amountUSD: BigDecimal!
  # txn origin
  origin: Bytes! # the EOA that initiated the txn
  # order within the txn
  logIndex: BigInt
}

type DecreaseLiquidity @entity {
  # transaction hash
  id: ID!
  # which txn was included in
  transaction: Transaction!
  # timestamp of transaction
  timestamp: BigInt!
  # fund swap occured within
  fund: Bytes!
  # pointer to Manager 
  manager: Bytes!
  # pointer to investor
  investor: Bytes!
  # decrease liquidity token0 address
  token0: String!
  # decrease liquidity token1 address
  token1: String!
  # token0 symbol
  token0Symbol: String!
  # token1 symbol
  token1Symbol: String!
  # amount of token0 decreased
  amount0: BigDecimal!
  # amount of token1 decreased
  amount1: BigDecimal!
  # derived amount based on available prices of tokens
  amountETH: BigDecimal!
  # derived amount based on available prices of tokens
  amountUSD: BigDecimal!
  # txn origin
  origin: Bytes! # the EOA that initiated the txn
  # order within the txn
  logIndex: BigInt
}

# daily stats tracker for Dotoli Fund
type DotoliFundSnapshot @entity {
  # txn hash
  id: ID!
  # timestamp
  timestamp: BigInt!
  # amount of funds created
  fundCount: BigInt!
  # amount of investor
  investorCount: BigInt!
  # total volume all time in derived ETH
  totalVolumeETH: BigDecimal!
  # total volume all time in derived USD
  totalVolumeUSD: BigDecimal!
}

# daily stats tracker for fund
type FundSnapshot @entity {
  # format: <fund address>-<timestamp>
  id: ID!
  # timestamp
  timestamp: BigInt!
  # pointer to fund
  fund: Bytes!
  # pointer to Manager 
  manager: Bytes!
  # investorCount
  investorCount: BigInt!
  # volumeETH
  volumeETH: BigDecimal!
  # volume in USD
  volumeUSD: BigDecimal!
  # fund tokens address
  tokens: [Bytes!]!
  # fund tokens symbol
  symbols: [String!]!
  # tokens decimals
  decimals: [BigInt!]!
  # fund tokens volumeETH
  tokensVolumeETH: [BigDecimal!]!
  # fund tokens volumeUSD
  tokensVolumeUSD: [BigDecimal!]!
}

# daily stats tracker for investor
type InvestorSnapshot @entity {
  # format: <investor address>-<timestamp>
  id: ID!
  # timestamp
  timestamp: BigInt!
  # pointer to fund
  fund: Bytes!
  # pointer to Manager 
  manager: Bytes!
  # pointer to investor
  investor: Bytes!
  # principal ETH
  principalETH: BigDecimal!
  # principal USD
  principalUSD: BigDecimal!
  # volumeETH
  volumeETH: BigDecimal!
  # volume in USD
  volumeUSD: BigDecimal!
  # liquidity VolumeETH
  liquidityVolumeETH: BigDecimal!
  # liquidity VolumeUSD
  liquidityVolumeUSD: BigDecimal!
  # investor tokens address
  tokens: [Bytes!]!
  # investor tokens symbol
  symbols: [String!]!
  # investor tokens volumeETH
  tokensVolumeETH: [BigDecimal!]!
  # investor tokens volumeUSD
  tokensVolumeUSD: [BigDecimal!]!
}