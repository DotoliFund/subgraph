type Factory @entity {
  # factory address
  id: ID!
  # amount of funds created
  fundCount: BigInt!
  # amount of investor
  investorCount: BigInt!
  # white listed token
  whitelistTokens: [String!]!
  # swap router contract address
  swapRouter: String!
  # manager fee
  managerFee: BigInt!
  # total volume all time in derived USD
  totalVolumeUSD: BigDecimal!
  # total volume all time in derived ETH
  totalVolumeETH: BigDecimal!
  # current owner of the factory
  owner: Bytes!
}

type Fund @entity {
  # fund address
  id: ID!
  # creation
  createdAtTimestamp: BigInt!
  # block fund was created at
  createdAtBlockNumber: BigInt!
  # manager address
  manager: Bytes!
  # principalETH
  principalETH: BigDecimal!
  # principalUSD
  principalUSD: BigDecimal!
  # volumeETH
  volumeETH: BigDecimal!
  # volumeUSD
  volumeUSD: BigDecimal!
  # profit ETH
  profitETH: BigDecimal!
  # profit USD
  profitUSD: BigDecimal!
  # profit ratio ETH
  profitRatioETH: BigDecimal!
  # profit ratio USD
  profitRatioUSD: BigDecimal!
  # investorCount
  investorCount: BigInt!
  # fee volumeETH
  feeVolumeETH: BigDecimal!
  # fee volumeUSD
  feeVolumeUSD: BigDecimal!
}

type Investor @entity {
  # format: <fund address>-<investor address>
  id: ID!
  # creation
  createdAtTimestamp: BigInt!
  # block investor was created at
  createdAtBlockNumber: BigInt!
  # fund address
  fund: Bytes!
  # manager address
  manager: Bytes!
  # investor address
  investor: Bytes!
  # principalETH
  principalETH: BigDecimal!
  # principalUSD
  principalUSD: BigDecimal!
  # volumeETH
  volumeETH: BigDecimal!
  # volumeUSD
  volumeUSD: BigDecimal!
  # profit ETH
  profitETH: BigDecimal!
  # profit USD
  profitUSD: BigDecimal!
  # profit ratio ETH
  profitRatioETH: BigDecimal!
  # profit ratio USD
  profitRatioUSD: BigDecimal!
}

type Transaction @entity {
  # txn hash
  id: ID!
  # block txn was included in
  blockNumber: BigInt!
  # timestamp txn was confirmed
  timestamp: BigInt!
  # derived values
  subscribes: [Subscribe!]! @derivedFrom(field: "transaction")
  managerFeeOuts: [ManagerFeeOut!]! @derivedFrom(field: "transaction")
  deposits: [Deposit!]! @derivedFrom(field: "transaction")
  withdraws: [Withdraw!]! @derivedFrom(field: "transaction")
  swaps: [Swap!]! @derivedFrom(field: "transaction")
}

type Subscribe @entity {
  # <fund address>-<investor address>
  id: ID!
  # which txn the mint was included in
  transaction: Transaction!
  # time of txn
  timestamp: BigInt!
  # pointer to Fund 
  fund: Bytes!
  # investor address
  investor: Bytes!
  # txn origin
  origin: Bytes! # the EOA that initiated the txn
  # order within the txn
  logIndex: BigInt
}

type ManagerFeeOut @entity {
  # transaction hash
  id: ID!
  # which txn was included in
  transaction: Transaction!
  # time of txn
  timestamp: BigInt!
  # pointer to Fund 
  fund: Bytes!
  # pointer to Manager 
  manager: Bytes!
  # withdraw token address
  token: Bytes!
  # amount of token withdraw
  amount: BigInt!
  # derived amount based on available prices of tokens
  amountETH: BigDecimal!
  # derived amount based on available prices of tokens
  amountUSD: BigDecimal!
  # txn origin
  origin: Bytes! # the EOA that initiated the txn
  # order within the txn
  logIndex: BigInt
}

type Deposit @entity {
  # transaction hash
  id: ID!
  # which txn was included in
  transaction: Transaction!
  # time of txn
  timestamp: BigInt!
  # pointer to Fund 
  fund: Bytes!
  # pointer to investor
  investor: Bytes!
  # withdraw token address
  token: Bytes!
  # amount of token withdraw
  amount: BigInt!
  # derived amount based on available prices of tokens
  amountETH: BigDecimal!
  # derived amount based on available prices of tokens
  amountUSD: BigDecimal!
  # txn origin
  origin: Bytes! # the EOA that initiated the txn
  # order within the txn
  logIndex: BigInt
}

type Withdraw @entity {
  # transaction hash
  id: ID!
  # which txn was included in
  transaction: Transaction!
  # time of txn
  timestamp: BigInt!
  # pointer to fund 
  fund: Bytes!
  # pointer to investor
  investor: Bytes!
  # withdraw token address
  token: Bytes!
  # amount of token withdraw
  amount: BigInt!
  # derived amount based on available prices of tokens
  amountETH: BigDecimal!
  # derived amount based on available prices of tokens
  amountUSD: BigDecimal!
  # txn origin
  origin: Bytes! # the EOA that initiated the txn
  # order within the txn
  logIndex: BigInt
}

type Swap @entity {
  # transaction hash
  id: ID!
  # which txn was included in
  transaction: Transaction!
  # timestamp of transaction
  timestamp: BigInt!
  # fund swap occured within
  fund: Bytes!
  # pointer to Manager 
  manager: Bytes!
  # pointer to investor
  investor: Bytes!
  # swap token0 address
  token0: String!
  # swap token1 address
  token1: String!
  # amount of token0 swapped
  amount0: BigInt!
  # amount of token1 swapped
  amount1: BigInt!
  # derived amount based on available prices of tokens
  amountETH: BigDecimal!
  # derived amount based on available prices of tokens
  amountUSD: BigDecimal!
  # txn origin
  origin: Bytes! # the EOA that initiated the txn
  # order within the txn
  logIndex: BigInt
}

# daily stats tracker for XXX
type XXXFund2Snapshot @entity {
  # txn hash
  id: ID!
  # timestamp
  timestamp: BigInt!
  # amount of funds created
  fundCount: BigInt!
  # amount of investor
  investorCount: BigInt!
  # white listed token
  whitelistTokens: [String!]!
  # manager fee
  managerFee: BigInt!
  # total volume all time in derived ETH
  totalVolumeETH: BigDecimal!
  # total volume all time in derived USD
  totalVolumeUSD: BigDecimal!
}

# daily stats tracker for fund
type FundSnapshot @entity {
  # format: <fund address>-<timestamp>
  id: ID!
  # timestamp
  timestamp: BigInt!
  # pointer to fund
  fund: Bytes!
  # pointer to Manager 
  manager: Bytes!
  # principal USD
  principalUSD: BigDecimal!
  # principal ETH
  principalETH: BigDecimal!
  # volume in USD
  volumeUSD: BigDecimal!
  # volumeETH
  volumeETH: BigDecimal!
  # profit ETH
  profitETH: BigDecimal!
  # profit USD
  profitUSD: BigDecimal!
  # profit ratio ETH
  profitRatioETH: BigDecimal!
  # profit ratio USD
  profitRatioUSD: BigDecimal!
  # investorCount
  investorCount: BigInt!
  # fee volumeETH
  feeVolumeETH: BigDecimal!
  # fee volumeUSD
  feeVolumeUSD: BigDecimal!
}

# daily stats tracker for investor
type InvestorSnapshot @entity {
  # format: <investor address>-<timestamp>
  id: ID!
  # timestamp
  timestamp: BigInt!
  # pointer to fund
  fund: Bytes!
  # pointer to Manager 
  manager: Bytes!
  # pointer to investor
  investor: Bytes!
  # principal USD
  principalUSD: BigDecimal!
  # principal ETH
  principalETH: BigDecimal!
  # volume in USD
  volumeUSD: BigDecimal!
  # volumeETH
  volumeETH: BigDecimal!
  # profit ETH
  profitETH: BigDecimal!
  # profit USD
  profitUSD: BigDecimal!
  # profit ratio ETH
  profitRatioETH: BigDecimal!
  # profit ratio USD
  profitRatioUSD: BigDecimal!
}